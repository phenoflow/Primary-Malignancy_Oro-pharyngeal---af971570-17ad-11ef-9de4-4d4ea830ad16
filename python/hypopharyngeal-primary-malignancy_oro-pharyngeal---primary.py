# Kuan V, Denaxas S, Gonzalez-Izquierdo A, Direk K, Bhatti O, Husain S, Sutaria S, Hingorani M, Nitsch D, Parisinos C, Lumbers T, Mathur R, Sofat R, Casas JP, Wong I, Hemingway H, Hingorani A, 2024.

import sys, csv, re

codes = [{"code":"B08y.00","system":"readv2"},{"code":"B082.00","system":"readv2"},{"code":"B072000","system":"readv2"},{"code":"B071100","system":"readv2"},{"code":"24675.0","system":"readv2"},{"code":"38488.0","system":"readv2"},{"code":"100906.0","system":"readv2"},{"code":"96869.0","system":"readv2"},{"code":"36716.0","system":"readv2"},{"code":"73614.0","system":"readv2"},{"code":"88362.0","system":"readv2"},{"code":"48519.0","system":"readv2"},{"code":"46114.0","system":"readv2"},{"code":"90610.0","system":"readv2"},{"code":"100002.0","system":"readv2"},{"code":"58973.0","system":"readv2"},{"code":"16902.0","system":"readv2"},{"code":"102205.0","system":"readv2"},{"code":"49758.0","system":"readv2"},{"code":"43400.0","system":"readv2"},{"code":"45803.0","system":"readv2"},{"code":"101753.0","system":"readv2"},{"code":"59004.0","system":"readv2"},{"code":"94390.0","system":"readv2"},{"code":"58121.0","system":"readv2"},{"code":"66270.0","system":"readv2"},{"code":"39554.0","system":"readv2"},{"code":"73962.0","system":"readv2"},{"code":"39430.0","system":"readv2"},{"code":"98740.0","system":"readv2"},{"code":"95772.0","system":"readv2"},{"code":"14712.0","system":"readv2"},{"code":"49360.0","system":"readv2"},{"code":"99001.0","system":"readv2"},{"code":"20092.0","system":"readv2"},{"code":"95429.0","system":"readv2"},{"code":"46728.0","system":"readv2"},{"code":"91035.0","system":"readv2"},{"code":"97530.0","system":"readv2"},{"code":"30402.0","system":"readv2"},{"code":"43781.0","system":"readv2"},{"code":"37516.0","system":"readv2"},{"code":"37553.0","system":"readv2"},{"code":"50296.0","system":"readv2"},{"code":"70819.0","system":"readv2"},{"code":"69761.0","system":"readv2"},{"code":"98500.0","system":"readv2"},{"code":"39084.0","system":"readv2"},{"code":"43642.0","system":"readv2"},{"code":"37724.0","system":"readv2"},{"code":"28665.0","system":"readv2"},{"code":"37940.0","system":"readv2"},{"code":"61510.0","system":"readv2"},{"code":"69671.0","system":"readv2"},{"code":"33388.0","system":"readv2"},{"code":"46548.0","system":"readv2"},{"code":"40557.0","system":"readv2"},{"code":"63979.0","system":"readv2"},{"code":"100918.0","system":"readv2"},{"code":"67504.0","system":"readv2"},{"code":"99386.0","system":"readv2"},{"code":"93842.0","system":"readv2"},{"code":"64462.0","system":"readv2"},{"code":"101988.0","system":"readv2"},{"code":"96003.0","system":"readv2"},{"code":"22893.0","system":"readv2"},{"code":"43548.0","system":"readv2"},{"code":"39897.0","system":"readv2"},{"code":"14792.0","system":"readv2"},{"code":"56709.0","system":"readv2"},{"code":"91037.0","system":"readv2"},{"code":"71147.0","system":"readv2"},{"code":"16241.0","system":"readv2"},{"code":"100144.0","system":"readv2"},{"code":"56355.0","system":"readv2"},{"code":"36161.0","system":"readv2"},{"code":"28451.0","system":"readv2"},{"code":"37096.0","system":"readv2"},{"code":"61692.0","system":"readv2"},{"code":"32024.0","system":"readv2"},{"code":"17912.0","system":"readv2"},{"code":"106915.0","system":"readv2"},{"code":"19415.0","system":"readv2"},{"code":"10283.0","system":"readv2"},{"code":"68399.0","system":"readv2"},{"code":"41530.0","system":"readv2"},{"code":"102142.0","system":"readv2"},{"code":"37916.0","system":"readv2"},{"code":"102151.0","system":"readv2"},{"code":"70928.0","system":"readv2"},{"code":"55066.0","system":"readv2"},{"code":"43431.0","system":"readv2"},{"code":"91895.0","system":"readv2"},{"code":"26448.0","system":"readv2"},{"code":"99931.0","system":"readv2"},{"code":"40292.0","system":"readv2"},{"code":"20292.0","system":"readv2"},{"code":"9984.0","system":"readv2"},{"code":"91843.0","system":"readv2"},{"code":"55630.0","system":"readv2"},{"code":"66422.0","system":"readv2"},{"code":"66384.0","system":"readv2"},{"code":"16297.0","system":"readv2"},{"code":"93218.0","system":"readv2"},{"code":"99185.0","system":"readv2"},{"code":"103796.0","system":"readv2"},{"code":"45986.0","system":"readv2"},{"code":"70696.0","system":"readv2"},{"code":"26134.0","system":"readv2"},{"code":"99493.0","system":"readv2"},{"code":"18882.0","system":"readv2"},{"code":"53884.0","system":"readv2"},{"code":"51786.0","system":"readv2"},{"code":"4388.0","system":"readv2"},{"code":"96782.0","system":"readv2"},{"code":"107258.0","system":"readv2"},{"code":"101707.0","system":"readv2"},{"code":"51926.0","system":"readv2"},{"code":"24374.0","system":"readv2"},{"code":"57248.0","system":"readv2"},{"code":"37590.0","system":"readv2"},{"code":"89909.0","system":"readv2"},{"code":"50475.0","system":"readv2"},{"code":"67446.0","system":"readv2"},{"code":"67323.0","system":"readv2"},{"code":"95016.0","system":"readv2"},{"code":"73439.0","system":"readv2"},{"code":"34012.0","system":"readv2"},{"code":"24397.0","system":"readv2"},{"code":"31364.0","system":"readv2"},{"code":"94251.0","system":"readv2"},{"code":"47205.0","system":"readv2"},{"code":"43200.0","system":"readv2"},{"code":"62840.0","system":"readv2"},{"code":"95480.0","system":"readv2"},{"code":"69951.0","system":"readv2"},{"code":"45408.0","system":"readv2"},{"code":"96783.0","system":"readv2"},{"code":"90124.0","system":"readv2"},{"code":"24852.0","system":"readv2"},{"code":"44139.0","system":"readv2"},{"code":"94441.0","system":"readv2"},{"code":"34409.0","system":"readv2"},{"code":"55015.0","system":"readv2"},{"code":"100721.0","system":"readv2"},{"code":"28559.0","system":"readv2"}];
REQUIRED_CODES = 1;
with open(sys.argv[1], 'r') as file_in, open('primary-malignancy_oro-pharyngeal-potential-cases.csv', 'w', newline='') as file_out:
    csv_reader = csv.DictReader(file_in)
    csv_writer = csv.DictWriter(file_out, csv_reader.fieldnames + ["hypopharyngeal-primary-malignancy_oro-pharyngeal---primary-identified"])
    csv_writer.writeheader();
    codes_identified = 0;
    for row in csv_reader:
        newRow = row.copy();
        for cell in row:
            # Iterate cell lists (e.g. codes)
            for item in re.findall(r'\(([^,]*)\,', row[cell]):
                if(item in list(map(lambda code: code['code'], codes))): codes_identified+=1;
                if(codes_identified>=REQUIRED_CODES):
                    newRow["hypopharyngeal-primary-malignancy_oro-pharyngeal---primary-identified"] = "CASE";
                    break;
            if(codes_identified>=REQUIRED_CODES): break;
        if(codes_identified<REQUIRED_CODES):
            newRow["hypopharyngeal-primary-malignancy_oro-pharyngeal---primary-identified"] = "UNK";
        codes_identified=0;
        csv_writer.writerow(newRow)
